from re import match

def find_greatest_product_of_five_consective_digits(s):
    s = filter(lambda x: not match(r'^\s*$', x), s)
    ranges = map(lambda x: (x, x + 5), xrange(len(s) - 4))
    slices = map(lambda x: list(s[x[0]:x[1]]), ranges)
    list_of_ints = map(lambda x: map(lambda y: int(y), x), slices)
    mults = map(lambda l: reduce(lambda x,y: x * y, l), list_of_ints)
    return max(mults or [0]) # incase if s is an empty string

if __name__ == "__main__":
    s = """731671765313306249192251196744265747423553491949349698352031277
    4506326239578318016984801869478851843858615607891129494954595017379583
    3195285320880551112540698747158523863050715693290963295227443043557668
    9664895044524452316173185640309871112172238311362229893423380308135336
    2766142828064444866452387493035890729629049156044077239071381051585930
    7960866701724271218839987979087922749219016997208880937766572733300105
    3367881220235421809751254540594752243525849077116705560136048395864467
    0632441572215539753697817977846174064955149290862569321978468622482839
    7224137565705605749026140797296865241453510047482166370484403199890008
    8952434506585412275886668811642717147992444292823086346567481391912316
    2824586178664583591245665294765456828489128831426076900422421902267105
    5626321111109370544217506941658960408071984038509624554443629812309878
    7992724428490918884580156166097919133875499200524063689912560717606058
    8611646710940507754100225698315520005593572972571636269561882670428252
    483600823257530420752963450"""
    print find_greatest_product_of_five_consective_digits(s)
